'use client';

import type { Metadata } from 'next';
import { useEffect } from 'react';
import { Geist, Geist_Mono } from 'next/font/google';
import './globals.css';
import Header from './components/Header';
import { UserProvider, useUser, fetchMe } from './lib/auth';

const geistSans = Geist({
  variable: '--font-geist-sans',
  subsets: ['latin'],
});

const geistMono = Geist_Mono({
  variable: '--font-geist-mono',
  subsets: ['latin'],
});

export const metadata: Metadata = {
  title: '一盏大师',
  description: 'Generated by create next app',
};

function LayoutBody({ children }: { children: React.ReactNode }) {
  const { user, setUser } = useUser();
  useEffect(() => {
    if (!user) {
      void fetchMe().then((u) => {
        if (u) setUser(u);
      });
    }
  }, [user, setUser]);
  return (
    <body className={`${geistSans.variable} ${geistMono.variable} antialiased`}>
      <Header />
      {children}
    </body>
  );
}

export default function RootLayout({
  children,
}: Readonly<{
  children: React.ReactNode;
}>) {
  return (
    <html lang="en">
      <UserProvider>
        <LayoutBody>{children}</LayoutBody>
      </UserProvider>
    </html>
  );
}

